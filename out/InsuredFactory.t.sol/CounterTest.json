{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_usdc",
      "outputs": [
        {
          "internalType": "contract USDC",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "insuredFactory",
      "outputs": [
        {
          "internalType": "contract InsuredFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_InsuredCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_InsuredCryto",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526007805460ff199081166001908117909255600b80549091169091179055602080546001600160a01b031916601117905534801561004157600080fd5b5061341b806100516000396000f3fe60806040523480156200001157600080fd5b5060043610620001155760003560e01c806385226c8111620000a3578063ba414fa6116200006e578063ba414fa614620001fc578063dca270f11462000217578063e20c9f71146200022b578063fa7626d4146200023557600080fd5b806385226c8114620001c5578063916a17c614620001de578063956e8db814620001e8578063b5508aa914620001f257600080fd5b80633f7286f411620000e45780633f7286f4146200016b57806366d9a9a014620001755780636eaf45f3146200018e578063791966ec146200019857600080fd5b80630a9254e4146200011a5780631ed7831c14620001265780632ade388014620001485780633e5e3c231462000161575b600080fd5b6200012462000243565b005b6200013062000354565b6040516200013f9190620013d8565b60405180910390f35b62000152620003b8565b6040516200013f91906200144d565b6200013062000506565b6200013062000568565b6200017f620005ca565b6040516200013f91906200152e565b62000124620006b4565b601d54620001ac906001600160a01b031681565b6040516001600160a01b0390911681526020016200013f565b620001cf62000a8b565b6040516200013f9190620015e5565b6200017f62000b65565b6200012462000c4f565b620001cf62000f07565b6200020662000fe1565b60405190151581526020016200013f565b601c54620001ac906001600160a01b031681565b6200013062001118565b600754620002069060ff1681565b6040516200025190620013bc565b604051809103906000f0801580156200026e573d6000803e3d6000fd5b50601d80546001600160a01b0319166001600160a01b039290921691821790556040516200029c90620013ca565b6001600160a01b039091168152602001604051809103906000f080158015620002c9573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b03928316179055601d546020546040516340c10f1960e01b8152908316600482015269021e19e0c9bab240000060248201529116906340c10f19906044015b600060405180830381600087803b1580156200033957600080fd5b505af11580156200034e573d6000803e3d6000fd5b50505050565b60606014805480602002602001604051908101604052809291908181526020018280548015620003ae57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116200038f575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b82821015620004fd57600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015620004e5578382906000526020600020018054620004519062001656565b80601f01602080910402602001604051908101604052809291908181526020018280546200047f9062001656565b8015620004d05780601f10620004a457610100808354040283529160200191620004d0565b820191906000526020600020905b815481529060010190602001808311620004b257829003601f168201915b5050505050815260200190600101906200042f565b505050508152505081526020019060010190620003dc565b50505050905090565b60606016805480602002602001604051908101604052809291908181526020018280548015620003ae576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200038f575050505050905090565b60606015805480602002602001604051908101604052809291908181526020018280548015620003ae576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200038f575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620004fd5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200069b57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116200065c5790505b50505050508152505081526020019060010190620005ee565b60205460405163c88a5e6d60e01b81526001600160a01b039091166004820152670de0b6b3a7640000602482015267016345785d8a000090737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b1580156200072657600080fd5b505af11580156200073b573d6000803e3d6000fd5b50506020546040516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d569150602401600060405180830381600087803b1580156200079957600080fd5b505af1158015620007ae573d6000803e3d6000fd5b5050601c546040516236809960e21b81526bffffffffffffffffffffffff851660048201526001600160a01b03909116925062da026491506024016020604051808303816000875af115801562000809573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200082f9190620016ab565b601e80546001600160a01b0319166001600160a01b039290921691821790556040805163b15eb31b60e01b8152905163b15eb31b9167016345785d8a000091600480830192600092919082900301818588803b1580156200088f57600080fd5b505af1158015620008a4573d6000803e3d6000fd5b50506040516372eb5f8160e11b8152622a30006004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d935063e5d6bf0292506024019050600060405180830381600087803b158015620008fa57600080fd5b505af11580156200090f573d6000803e3d6000fd5b50505050601e60009054906101000a90046001600160a01b03166001600160a01b031663b15eb31b67016345785d8a00006040518263ffffffff1660e01b81526004016000604051808303818588803b1580156200096c57600080fd5b505af115801562000981573d6000803e3d6000fd5b5050601e54620009a993506001600160a01b03163191506702c68af0bb14000090506200117a565b601e54604051633a683c3760e21b81526702c68af0bb14000060048201526001600160a01b039091169063e9a0f0dc90602401600060405180830381600087803b158015620009f757600080fd5b505af115801562000a0c573d6000803e3d6000fd5b505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000a6f57600080fd5b505af115801562000a84573d6000803e3d6000fd5b5050505050565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015620004fd57838290600052602060002001805462000ad19062001656565b80601f016020809104026020016040519081016040528092919081815260200182805462000aff9062001656565b801562000b505780601f1062000b245761010080835404028352916020019162000b50565b820191906000526020600020905b81548152906001019060200180831162000b3257829003601f168201915b50505050508152602001906001019062000aaf565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620004fd5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000c3657602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000bf75790505b5050505050815250508152602001906001019062000b89565b60205460405163c88a5e6d60e01b81526001600160a01b039091166004820152670de0b6b3a76400006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b15801562000cb757600080fd5b505af115801562000ccc573d6000803e3d6000fd5b5050601d54601c546040516340c10f1960e01b81526001600160a01b03918216600482015269021e19e0c9bab24000006024820152911692506340c10f199150604401600060405180830381600087803b15801562000d2a57600080fd5b505af115801562000d3f573d6000803e3d6000fd5b50506020546040516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d569150602401600060405180830381600087803b15801562000d9d57600080fd5b505af115801562000db2573d6000803e3d6000fd5b5050601c5460405163043c460360e01b8152600060048201526001600160a01b03909116925063043c4603915067016345785d8a00009060240160206040518083038185885af115801562000e0b573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062000e329190620016ab565b601f80546001600160a01b0319166001600160a01b03928316908117909155601d5460405163095ea7b360e01b8152600481019290925269021e19e0c9bab240000060248301529091169063095ea7b3906044016020604051808303816000875af115801562000ea6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ecc9190620016d2565b50601f5460405163ab7b1c8960e01b815268056bc75e2d6310000060048201526001600160a01b039091169063ab7b1c89906024016200031e565b60606017805480602002602001604051908101604052809291908181526020016000905b82821015620004fd57838290600052602060002001805462000f4d9062001656565b80601f016020809104026020016040519081016040528092919081815260200182805462000f7b9062001656565b801562000fcc5780601f1062000fa05761010080835404028352916020019162000fcc565b820191906000526020600020905b81548152906001019060200180831162000fae57829003601f168201915b50505050508152602001906001019062000f2b565b600754600090610100900460ff1615620010045750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620011135760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162001095917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620016f6565b60408051601f1981840301815290829052620010b19162001729565b6000604051808303816000865af19150503d8060008114620010f0576040519150601f19603f3d011682016040523d82523d6000602084013e620010f5565b606091505b50915050808060200190518101906200110f9190620016d2565b9150505b919050565b60606013805480602002602001604051908101604052809291908181526020018280548015620003ae576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200038f575050505050905090565b808214620012a5577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620011ed9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1620012a5620012a9565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620013ab5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620013469291602001620016f6565b60408051601f1981840301815290829052620013629162001729565b6000604051808303816000865af19150503d8060008114620013a1576040519150601f19603f3d011682016040523d82523d6000602084013e620013a6565b606091505b505050505b6007805461ff001916610100179055565b610964806200174883390190565b61133a80620020ac83390190565b6020808252825182820181905260009190848201906040850190845b818110156200141b5783516001600160a01b031683529284019291840191600101620013f4565b50909695505050505050565b60005b83811015620014445781810151838201526020016200142a565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200152157603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b818110156200150957898403605f1901835284518051808652620014e9818e88018f850162001427565b958c0195601f01601f1916949094018b019350918a0191600101620014bf565b50919750505093860193509085019060010162001474565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015620015d657898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620015c05783516001600160e01b0319168252928b019260019290920191908b019062001594565b50978a0197955050509187019160010162001556565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200152157878503603f190184528151805180875262001636818989018a850162001427565b601f01601f1916959095018601945092850192908501906001016200160c565b600181811c908216806200166b57607f821691505b6020821081036200168c57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b0381168114620016a857600080fd5b50565b600060208284031215620016be57600080fd5b8151620016cb8162001692565b9392505050565b600060208284031215620016e557600080fd5b81518015158114620016cb57600080fd5b6001600160e01b03198316815281516000906200171b81600485016020870162001427565b919091016004019392505050565b600082516200173d81846020870162001427565b919091019291505056fe608060405234801561001057600080fd5b50604051806040016040528060088152602001672aa9a21021b7b4b760c11b815250604051806040016040528060048152602001635553444360e01b815250816003908161005e9190610112565b50600461006b8282610112565b5050506101d1565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061009d57607f821691505b6020821081036100bd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561010d57600081815260208120601f850160051c810160208610156100ea5750805b601f850160051c820191505b81811015610109578281556001016100f6565b5050505b505050565b81516001600160401b0381111561012b5761012b610073565b61013f816101398454610089565b846100c3565b602080601f831160018114610174576000841561015c5750858301515b600019600386901b1c1916600185901b178555610109565b600085815260208120601f198616915b828110156101a357888601518255948401946001909101908401610184565b50858210156101c15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610784806101e06000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806340c10f191161006657806340c10f191461011857806370a082311461012d57806395d89b4114610156578063a9059cbb1461015e578063dd62ed3e1461017157600080fd5b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100e457806323b872dd146100f6578063313ce56714610109575b600080fd5b6100ab6101aa565b6040516100b891906105ce565b60405180910390f35b6100d46100cf366004610638565b61023c565b60405190151581526020016100b8565b6002545b6040519081526020016100b8565b6100d4610104366004610662565b610256565b604051601281526020016100b8565b61012b610126366004610638565b61027a565b005b6100e861013b36600461069e565b6001600160a01b031660009081526020819052604090205490565b6100ab610288565b6100d461016c366004610638565b610297565b6100e861017f3660046106c0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101b9906106f3565b80601f01602080910402602001604051908101604052809291908181526020018280546101e5906106f3565b80156102325780601f1061020757610100808354040283529160200191610232565b820191906000526020600020905b81548152906001019060200180831161021557829003601f168201915b5050505050905090565b60003361024a8185856102a5565b60019150505b92915050565b6000336102648582856102b7565b61026f85858561033a565b506001949350505050565b6102848282610399565b5050565b6060600480546101b9906106f3565b60003361024a81858561033a565b6102b283838360016103cf565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610334578181101561032557604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b610334848484840360006103cf565b50505050565b6001600160a01b03831661036457604051634b637e8f60e11b81526000600482015260240161031c565b6001600160a01b03821661038e5760405163ec442f0560e01b81526000600482015260240161031c565b6102b28383836104a4565b6001600160a01b0382166103c35760405163ec442f0560e01b81526000600482015260240161031c565b610284600083836104a4565b6001600160a01b0384166103f95760405163e602df0560e01b81526000600482015260240161031c565b6001600160a01b03831661042357604051634a1406b160e11b81526000600482015260240161031c565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561033457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161049691815260200190565b60405180910390a350505050565b6001600160a01b0383166104cf5780600260008282546104c4919061072d565b909155506105419050565b6001600160a01b038316600090815260208190526040902054818110156105225760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161031c565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661055d5760028054829003905561057c565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105c191815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156105fb578581018301518582016040015282016105df565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461063357600080fd5b919050565b6000806040838503121561064b57600080fd5b6106548361061c565b946020939093013593505050565b60008060006060848603121561067757600080fd5b6106808461061c565b925061068e6020850161061c565b9150604084013590509250925092565b6000602082840312156106b057600080fd5b6106b98261061c565b9392505050565b600080604083850312156106d357600080fd5b6106dc8361061c565b91506106ea6020840161061c565b90509250929050565b600181811c9082168061070757607f821691505b60208210810361072757634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561025057634e487b7160e01b600052601160045260246000fdfea26469706673582212208b45fb140a675c3bb5f78b03f4d0fad115710f889fb8f689a36a940811aabb1e64736f6c63430008140033608060405234801561001057600080fd5b5060405161133a38038061133a83398101604081905261002f91610054565b600480546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6112a7806100936000396000f3fe60806040526004361061003e5760003560e01c8062da026414610043578063043c4603146100805780631070aea714610093578063e6fc6ed514610093575b600080fd5b34801561004f57600080fd5b5061006361005e366004610492565b6100af565b6040516001600160a01b0390911681526020015b60405180910390f35b61006361008e3660046104d3565b610209565b34801561009f57600080fd5b50606060405161007791906104f0565b3360009081526020819052604081205460ff16156101065760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4810dc99585d1959608a1b60448201526064015b60405180910390fd5b338260405161011490610478565b6001600160a01b0390921682526001600160601b03166020820152604001604051809103906000f08015801561014e573d6000803e3d6000fd5b50336000818152602081815260408083208054600160ff1990911681179091556002805491820181559093527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90920180546001600160a01b0319166001600160a01b03861690811790915582519384526001600160601b03871691840191909152908201529091507f9f7ff1415ce1c99b396f9d677e3de87310222d7d5ebc4ad0af2502f4dcd5d9c49060600160405180910390a1919050565b3360009081526020819052604081205460ff161561025b5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4810dc99585d1959608a1b60448201526064016100fd565b6000670de0b6b3a76400006102723461070861053d565b61027c9190610568565b9050600061070861029683683635c9adc5dea0000061053d565b6102a09190610568565b905034813330600460009054906101000a90046001600160a01b0316886040516102c990610485565b95865260208601949094526001600160a01b0392831660408601529082166060850152166080830152151560a082015260c001604051809103906000f080158015610318573d6000803e3d6000fd5b50336000818152600160208190526040808320805460ff1916831790556002805492830181559092527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b038581169190911790915560048054925163a9059cbb60e01b815290810193909352602483018590529295509091169063a9059cbb906044016020604051808303816000875af11580156103ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f2919061058a565b506040516001600160a01b038416903480156108fc02916000818181858888f19350505050158015610428573d6000803e3d6000fd5b5060408051338152602081018390526001600160a01b0385168183015290517f9f7ff1415ce1c99b396f9d677e3de87310222d7d5ebc4ad0af2502f4dcd5d9c49181900360600190a15050919050565b610555806105a883390190565b61077580610afd83390190565b6000602082840312156104a457600080fd5b81356001600160601b03811681146104bb57600080fd5b9392505050565b80151581146104d057600080fd5b50565b6000602082840312156104e557600080fd5b81356104bb816104c2565b6020808252825182820181905260009190848201906040850190845b818110156105315783516001600160a01b03168352928401929184019160010161050c565b50909695505050505050565b808202811582820484141761056257634e487b7160e01b600052601160045260246000fd5b92915050565b60008261058557634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561059c57600080fd5b81516104bb816104c256fe608060405234801561001057600080fd5b5060405161055538038061055583398101604081905261002f91610089565b600080546001600160a01b039384166001600160a01b031990911681178255600180546001600160601b03909416600160a01b0293909416929092178355908152600360205260409020805460ff191690911790556100db565b6000806040838503121561009c57600080fd5b82516001600160a01b03811681146100b357600080fd5b60208401519092506001600160601b03811681146100d057600080fd5b809150509250929050565b61046b806100ea6000396000f3fe60806040526004361061004e5760003560e01c8063047e01791461005a578063b15eb31b1461009f578063c8f7d6be146100a9578063de45aeef146100f8578063e9a0f0dc1461014e57600080fd5b3661005557005b600080fd5b34801561006657600080fd5b5061008a610075366004610394565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100a761016e565b005b3480156100b557600080fd5b50600080546001600160a01b0316815260026020526040902080546001909101548147604080519485526020850193909352918301526060820152608001610096565b34801561010457600080fd5b50610133610113366004610394565b600260208190526000918252604090912080546001820154919092015483565b60408051938452602084019290925290820152606001610096565b34801561015a57600080fd5b506100a76101693660046103c4565b610226565b600154600160a01b90046001600160601b031634146101a057604051632409aec760e01b815260040160405180910390fd5b600080546001600160a01b031681526002602052604090205442116101d857604051635da35c1560e11b815260040160405180910390fd5b6101e54262278d00610403565b600080546001600160a01b039081168252600260208190526040808420949094558254909116825291812090910180549161021f8361041c565b9190505550565b6000546001600160a01b031633146102745760405162461bcd60e51b815260206004820152600d60248201526c139bdd0814195c9b5a5d1d1959609a1b604482015260640160405180910390fd5b33600090815260026020819052604090912081015410156102a85760405163624dd24760e01b815260040160405180910390fd5b6102b54262eff100610403565b33600090815260026020526040902060010154106102e6576040516328f164d160e11b815260040160405180910390fd5b600080546001600160a01b0316815260026020819052604082200180549161030d8361041c565b9190505550806001600160601b031647101561033c57604051631ea447d760e31b815260040160405180910390fd5b600080546001600160a01b031681526002602052604080822042600191909101555133916001600160601b03841680156108fc02929091818181858888f19350505050158015610390573d6000803e3d6000fd5b5050565b6000602082840312156103a657600080fd5b81356001600160a01b03811681146103bd57600080fd5b9392505050565b6000602082840312156103d657600080fd5b81356001600160601b03811681146103bd57600080fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610416576104166103ed565b92915050565b60006001820161042e5761042e6103ed565b506001019056fea2646970667358221220762676e5f5308501e36feb39a31a2f332ee53a346593cee79509ef35907455e664736f6c63430008140033608060405234801561001057600080fd5b5060405161077538038061077583398101604081905261002f916100a9565b600180546001600160a01b03199081166001600160a01b039687161790915560039690965560049490945560008054861692841692909217909155600280549094169116179091556007805460ff1916911515919091179055610118565b80516001600160a01b03811681146100a457600080fd5b919050565b60008060008060008060c087890312156100c257600080fd5b86519550602087015194506100d96040880161008d565b93506100e76060880161008d565b92506100f56080880161008d565b915060a0870151801515811461010a57600080fd5b809150509295509295509295565b61064e806101276000396000f3fe6080604052600436106100595760003560e01c8063827d95341461006557806392d09ceb1461009a578063977dec1a146100be5780639d585f7f146100d4578063ab7b1c89146100ea578063dbc837c51461010c57600080fd5b3661006057005b600080fd5b34801561007157600080fd5b5061008561008036600461055b565b610144565b60405190151581526020015b60405180910390f35b3480156100a657600080fd5b506100b060035481565b604051908152602001610091565b3480156100ca57600080fd5b506100b060065481565b3480156100e057600080fd5b506100b060045481565b3480156100f657600080fd5b5061010a61010536600461055b565b6101f8565b005b34801561011857600080fd5b5060015461012c906001600160a01b031681565b6040516001600160a01b039091168152602001610091565b600061015362278d004261058a565b6006541061019e5760405162461bcd60e51b815260206004820152601460248201527313db9b1e481b5bdb9d1a1b1e4818da1958dad95960621b604482015260640160405180910390fd5b6000683635c9adc5dea000006107086004546101ba91906105a3565b6101c491906105ba565b90506000816101d3858261058a565b6101de9060646105a3565b6101e891906105ba565b42600655600a1115949350505050565b806004541080610209575080600454115b1561022757604051630636b6d560e11b815260040160405180910390fd5b60055460ff16151560010361024f5760405163941a0dc960e01b815260040160405180910390fd5b60075460ff1615156001036103d657610269610708610144565b15610371578060046000828254610280919061058a565b90915550506005805460ff191660011790556002546000546001600160a01b03918216916323b872dd913391166102b56104f4565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064015b6020604051808303816000875af115801561030a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032e91906105dc565b506001546003546040516001600160a01b039092169181156108fc0291906000818181858888f1935050505015801561036b573d6000803e3d6000fd5b506104b8565b8060046000828254610383919061058a565b90915550506005805460ff191660011790556002546000546040516323b872dd60e01b81523360048201526001600160a01b039182166024820152604481018490529116906323b872dd906064016102eb565b80600460008282546103e8919061058a565b90915550506005805460ff191660011790556002546000546040516323b872dd60e01b81523360048201526001600160a01b039182166024820152604481018490529116906323b872dd906064016020604051808303816000875af1158015610455573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047991906105dc565b506001546003546040516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156104b6573d6000803e3d6000fd5b505b60408051338152602081018390527f2348ce456766a06226fbe75c6f2c74d3165139a5644dd3390817b55600f3eb92910160405180910390a150565b60075460009060ff161515600114801561051d57506006546105199062278d00610605565b4210155b15610542576064600454600a61053391906105a3565b61053d91906105ba565b905090565b6040516339218f3b60e01b815260040160405180910390fd5b60006020828403121561056d57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561059d5761059d610574565b92915050565b808202811582820484141761059d5761059d610574565b6000826105d757634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156105ee57600080fd5b815180151581146105fe57600080fd5b9392505050565b8082018082111561059d5761059d61057456fea26469706673582212207ec87b7cb13849da1c2e36bf07ffad7e7939e2aee7a6c1bd45d75341f777969264736f6c63430008140033a26469706673582212200fbdbdb3d99af0f6cd3a754198ff170d017d48a519fec78f7053d300e8aeeff064736f6c63430008140033a2646970667358221220d8e8783219272fb27eeb32f4100d875b6a8b94bf9cb8cd95030b7690c6807ff064736f6c63430008140033",
    "sourceMap": "344:1410:28:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;;;1594:4;1572:26;;;;;;3126:44:3;;;;;;;;;;;524:32:28;;;-1:-1:-1;;;;;;524:32:28;551:4;524:32;;;344:1410;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001155760003560e01c806385226c8111620000a3578063ba414fa6116200006e578063ba414fa614620001fc578063dca270f11462000217578063e20c9f71146200022b578063fa7626d4146200023557600080fd5b806385226c8114620001c5578063916a17c614620001de578063956e8db814620001e8578063b5508aa914620001f257600080fd5b80633f7286f411620000e45780633f7286f4146200016b57806366d9a9a014620001755780636eaf45f3146200018e578063791966ec146200019857600080fd5b80630a9254e4146200011a5780631ed7831c14620001265780632ade388014620001485780633e5e3c231462000161575b600080fd5b6200012462000243565b005b6200013062000354565b6040516200013f9190620013d8565b60405180910390f35b62000152620003b8565b6040516200013f91906200144d565b6200013062000506565b6200013062000568565b6200017f620005ca565b6040516200013f91906200152e565b62000124620006b4565b601d54620001ac906001600160a01b031681565b6040516001600160a01b0390911681526020016200013f565b620001cf62000a8b565b6040516200013f9190620015e5565b6200017f62000b65565b6200012462000c4f565b620001cf62000f07565b6200020662000fe1565b60405190151581526020016200013f565b601c54620001ac906001600160a01b031681565b6200013062001118565b600754620002069060ff1681565b6040516200025190620013bc565b604051809103906000f0801580156200026e573d6000803e3d6000fd5b50601d80546001600160a01b0319166001600160a01b039290921691821790556040516200029c90620013ca565b6001600160a01b039091168152602001604051809103906000f080158015620002c9573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b03928316179055601d546020546040516340c10f1960e01b8152908316600482015269021e19e0c9bab240000060248201529116906340c10f19906044015b600060405180830381600087803b1580156200033957600080fd5b505af11580156200034e573d6000803e3d6000fd5b50505050565b60606014805480602002602001604051908101604052809291908181526020018280548015620003ae57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116200038f575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b82821015620004fd57600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015620004e5578382906000526020600020018054620004519062001656565b80601f01602080910402602001604051908101604052809291908181526020018280546200047f9062001656565b8015620004d05780601f10620004a457610100808354040283529160200191620004d0565b820191906000526020600020905b815481529060010190602001808311620004b257829003601f168201915b5050505050815260200190600101906200042f565b505050508152505081526020019060010190620003dc565b50505050905090565b60606016805480602002602001604051908101604052809291908181526020018280548015620003ae576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200038f575050505050905090565b60606015805480602002602001604051908101604052809291908181526020018280548015620003ae576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200038f575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620004fd5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200069b57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116200065c5790505b50505050508152505081526020019060010190620005ee565b60205460405163c88a5e6d60e01b81526001600160a01b039091166004820152670de0b6b3a7640000602482015267016345785d8a000090737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b1580156200072657600080fd5b505af11580156200073b573d6000803e3d6000fd5b50506020546040516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d569150602401600060405180830381600087803b1580156200079957600080fd5b505af1158015620007ae573d6000803e3d6000fd5b5050601c546040516236809960e21b81526bffffffffffffffffffffffff851660048201526001600160a01b03909116925062da026491506024016020604051808303816000875af115801562000809573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200082f9190620016ab565b601e80546001600160a01b0319166001600160a01b039290921691821790556040805163b15eb31b60e01b8152905163b15eb31b9167016345785d8a000091600480830192600092919082900301818588803b1580156200088f57600080fd5b505af1158015620008a4573d6000803e3d6000fd5b50506040516372eb5f8160e11b8152622a30006004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d935063e5d6bf0292506024019050600060405180830381600087803b158015620008fa57600080fd5b505af11580156200090f573d6000803e3d6000fd5b50505050601e60009054906101000a90046001600160a01b03166001600160a01b031663b15eb31b67016345785d8a00006040518263ffffffff1660e01b81526004016000604051808303818588803b1580156200096c57600080fd5b505af115801562000981573d6000803e3d6000fd5b5050601e54620009a993506001600160a01b03163191506702c68af0bb14000090506200117a565b601e54604051633a683c3760e21b81526702c68af0bb14000060048201526001600160a01b039091169063e9a0f0dc90602401600060405180830381600087803b158015620009f757600080fd5b505af115801562000a0c573d6000803e3d6000fd5b505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000a6f57600080fd5b505af115801562000a84573d6000803e3d6000fd5b5050505050565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015620004fd57838290600052602060002001805462000ad19062001656565b80601f016020809104026020016040519081016040528092919081815260200182805462000aff9062001656565b801562000b505780601f1062000b245761010080835404028352916020019162000b50565b820191906000526020600020905b81548152906001019060200180831162000b3257829003601f168201915b50505050508152602001906001019062000aaf565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620004fd5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000c3657602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000bf75790505b5050505050815250508152602001906001019062000b89565b60205460405163c88a5e6d60e01b81526001600160a01b039091166004820152670de0b6b3a76400006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b15801562000cb757600080fd5b505af115801562000ccc573d6000803e3d6000fd5b5050601d54601c546040516340c10f1960e01b81526001600160a01b03918216600482015269021e19e0c9bab24000006024820152911692506340c10f199150604401600060405180830381600087803b15801562000d2a57600080fd5b505af115801562000d3f573d6000803e3d6000fd5b50506020546040516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d569150602401600060405180830381600087803b15801562000d9d57600080fd5b505af115801562000db2573d6000803e3d6000fd5b5050601c5460405163043c460360e01b8152600060048201526001600160a01b03909116925063043c4603915067016345785d8a00009060240160206040518083038185885af115801562000e0b573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062000e329190620016ab565b601f80546001600160a01b0319166001600160a01b03928316908117909155601d5460405163095ea7b360e01b8152600481019290925269021e19e0c9bab240000060248301529091169063095ea7b3906044016020604051808303816000875af115801562000ea6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ecc9190620016d2565b50601f5460405163ab7b1c8960e01b815268056bc75e2d6310000060048201526001600160a01b039091169063ab7b1c89906024016200031e565b60606017805480602002602001604051908101604052809291908181526020016000905b82821015620004fd57838290600052602060002001805462000f4d9062001656565b80601f016020809104026020016040519081016040528092919081815260200182805462000f7b9062001656565b801562000fcc5780601f1062000fa05761010080835404028352916020019162000fcc565b820191906000526020600020905b81548152906001019060200180831162000fae57829003601f168201915b50505050508152602001906001019062000f2b565b600754600090610100900460ff1615620010045750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620011135760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162001095917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620016f6565b60408051601f1981840301815290829052620010b19162001729565b6000604051808303816000865af19150503d8060008114620010f0576040519150601f19603f3d011682016040523d82523d6000602084013e620010f5565b606091505b50915050808060200190518101906200110f9190620016d2565b9150505b919050565b60606013805480602002602001604051908101604052809291908181526020018280548015620003ae576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116200038f575050505050905090565b808214620012a5577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620011ed9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1620012a5620012a9565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620013ab5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620013469291602001620016f6565b60408051601f1981840301815290829052620013629162001729565b6000604051808303816000865af19150503d8060008114620013a1576040519150601f19603f3d011682016040523d82523d6000602084013e620013a6565b606091505b505050505b6007805461ff001916610100179055565b610964806200174883390190565b61133a80620020ac83390190565b6020808252825182820181905260009190848201906040850190845b818110156200141b5783516001600160a01b031683529284019291840191600101620013f4565b50909695505050505050565b60005b83811015620014445781810151838201526020016200142a565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200152157603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b818110156200150957898403605f1901835284518051808652620014e9818e88018f850162001427565b958c0195601f01601f1916949094018b019350918a0191600101620014bf565b50919750505093860193509085019060010162001474565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015620015d657898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620015c05783516001600160e01b0319168252928b019260019290920191908b019062001594565b50978a0197955050509187019160010162001556565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200152157878503603f190184528151805180875262001636818989018a850162001427565b601f01601f1916959095018601945092850192908501906001016200160c565b600181811c908216806200166b57607f821691505b6020821081036200168c57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b0381168114620016a857600080fd5b50565b600060208284031215620016be57600080fd5b8151620016cb8162001692565b9392505050565b600060208284031215620016e557600080fd5b81518015158114620016cb57600080fd5b6001600160e01b03198316815281516000906200171b81600485016020870162001427565b919091016004019392505050565b600082516200173d81846020870162001427565b919091019291505056fe608060405234801561001057600080fd5b50604051806040016040528060088152602001672aa9a21021b7b4b760c11b815250604051806040016040528060048152602001635553444360e01b815250816003908161005e9190610112565b50600461006b8282610112565b5050506101d1565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061009d57607f821691505b6020821081036100bd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561010d57600081815260208120601f850160051c810160208610156100ea5750805b601f850160051c820191505b81811015610109578281556001016100f6565b5050505b505050565b81516001600160401b0381111561012b5761012b610073565b61013f816101398454610089565b846100c3565b602080601f831160018114610174576000841561015c5750858301515b600019600386901b1c1916600185901b178555610109565b600085815260208120601f198616915b828110156101a357888601518255948401946001909101908401610184565b50858210156101c15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610784806101e06000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806340c10f191161006657806340c10f191461011857806370a082311461012d57806395d89b4114610156578063a9059cbb1461015e578063dd62ed3e1461017157600080fd5b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100e457806323b872dd146100f6578063313ce56714610109575b600080fd5b6100ab6101aa565b6040516100b891906105ce565b60405180910390f35b6100d46100cf366004610638565b61023c565b60405190151581526020016100b8565b6002545b6040519081526020016100b8565b6100d4610104366004610662565b610256565b604051601281526020016100b8565b61012b610126366004610638565b61027a565b005b6100e861013b36600461069e565b6001600160a01b031660009081526020819052604090205490565b6100ab610288565b6100d461016c366004610638565b610297565b6100e861017f3660046106c0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101b9906106f3565b80601f01602080910402602001604051908101604052809291908181526020018280546101e5906106f3565b80156102325780601f1061020757610100808354040283529160200191610232565b820191906000526020600020905b81548152906001019060200180831161021557829003601f168201915b5050505050905090565b60003361024a8185856102a5565b60019150505b92915050565b6000336102648582856102b7565b61026f85858561033a565b506001949350505050565b6102848282610399565b5050565b6060600480546101b9906106f3565b60003361024a81858561033a565b6102b283838360016103cf565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610334578181101561032557604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b610334848484840360006103cf565b50505050565b6001600160a01b03831661036457604051634b637e8f60e11b81526000600482015260240161031c565b6001600160a01b03821661038e5760405163ec442f0560e01b81526000600482015260240161031c565b6102b28383836104a4565b6001600160a01b0382166103c35760405163ec442f0560e01b81526000600482015260240161031c565b610284600083836104a4565b6001600160a01b0384166103f95760405163e602df0560e01b81526000600482015260240161031c565b6001600160a01b03831661042357604051634a1406b160e11b81526000600482015260240161031c565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561033457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161049691815260200190565b60405180910390a350505050565b6001600160a01b0383166104cf5780600260008282546104c4919061072d565b909155506105419050565b6001600160a01b038316600090815260208190526040902054818110156105225760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161031c565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661055d5760028054829003905561057c565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105c191815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156105fb578581018301518582016040015282016105df565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461063357600080fd5b919050565b6000806040838503121561064b57600080fd5b6106548361061c565b946020939093013593505050565b60008060006060848603121561067757600080fd5b6106808461061c565b925061068e6020850161061c565b9150604084013590509250925092565b6000602082840312156106b057600080fd5b6106b98261061c565b9392505050565b600080604083850312156106d357600080fd5b6106dc8361061c565b91506106ea6020840161061c565b90509250929050565b600181811c9082168061070757607f821691505b60208210810361072757634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561025057634e487b7160e01b600052601160045260246000fdfea26469706673582212208b45fb140a675c3bb5f78b03f4d0fad115710f889fb8f689a36a940811aabb1e64736f6c63430008140033608060405234801561001057600080fd5b5060405161133a38038061133a83398101604081905261002f91610054565b600480546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6112a7806100936000396000f3fe60806040526004361061003e5760003560e01c8062da026414610043578063043c4603146100805780631070aea714610093578063e6fc6ed514610093575b600080fd5b34801561004f57600080fd5b5061006361005e366004610492565b6100af565b6040516001600160a01b0390911681526020015b60405180910390f35b61006361008e3660046104d3565b610209565b34801561009f57600080fd5b50606060405161007791906104f0565b3360009081526020819052604081205460ff16156101065760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4810dc99585d1959608a1b60448201526064015b60405180910390fd5b338260405161011490610478565b6001600160a01b0390921682526001600160601b03166020820152604001604051809103906000f08015801561014e573d6000803e3d6000fd5b50336000818152602081815260408083208054600160ff1990911681179091556002805491820181559093527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90920180546001600160a01b0319166001600160a01b03861690811790915582519384526001600160601b03871691840191909152908201529091507f9f7ff1415ce1c99b396f9d677e3de87310222d7d5ebc4ad0af2502f4dcd5d9c49060600160405180910390a1919050565b3360009081526020819052604081205460ff161561025b5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4810dc99585d1959608a1b60448201526064016100fd565b6000670de0b6b3a76400006102723461070861053d565b61027c9190610568565b9050600061070861029683683635c9adc5dea0000061053d565b6102a09190610568565b905034813330600460009054906101000a90046001600160a01b0316886040516102c990610485565b95865260208601949094526001600160a01b0392831660408601529082166060850152166080830152151560a082015260c001604051809103906000f080158015610318573d6000803e3d6000fd5b50336000818152600160208190526040808320805460ff1916831790556002805492830181559092527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b038581169190911790915560048054925163a9059cbb60e01b815290810193909352602483018590529295509091169063a9059cbb906044016020604051808303816000875af11580156103ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f2919061058a565b506040516001600160a01b038416903480156108fc02916000818181858888f19350505050158015610428573d6000803e3d6000fd5b5060408051338152602081018390526001600160a01b0385168183015290517f9f7ff1415ce1c99b396f9d677e3de87310222d7d5ebc4ad0af2502f4dcd5d9c49181900360600190a15050919050565b610555806105a883390190565b61077580610afd83390190565b6000602082840312156104a457600080fd5b81356001600160601b03811681146104bb57600080fd5b9392505050565b80151581146104d057600080fd5b50565b6000602082840312156104e557600080fd5b81356104bb816104c2565b6020808252825182820181905260009190848201906040850190845b818110156105315783516001600160a01b03168352928401929184019160010161050c565b50909695505050505050565b808202811582820484141761056257634e487b7160e01b600052601160045260246000fd5b92915050565b60008261058557634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561059c57600080fd5b81516104bb816104c256fe608060405234801561001057600080fd5b5060405161055538038061055583398101604081905261002f91610089565b600080546001600160a01b039384166001600160a01b031990911681178255600180546001600160601b03909416600160a01b0293909416929092178355908152600360205260409020805460ff191690911790556100db565b6000806040838503121561009c57600080fd5b82516001600160a01b03811681146100b357600080fd5b60208401519092506001600160601b03811681146100d057600080fd5b809150509250929050565b61046b806100ea6000396000f3fe60806040526004361061004e5760003560e01c8063047e01791461005a578063b15eb31b1461009f578063c8f7d6be146100a9578063de45aeef146100f8578063e9a0f0dc1461014e57600080fd5b3661005557005b600080fd5b34801561006657600080fd5b5061008a610075366004610394565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100a761016e565b005b3480156100b557600080fd5b50600080546001600160a01b0316815260026020526040902080546001909101548147604080519485526020850193909352918301526060820152608001610096565b34801561010457600080fd5b50610133610113366004610394565b600260208190526000918252604090912080546001820154919092015483565b60408051938452602084019290925290820152606001610096565b34801561015a57600080fd5b506100a76101693660046103c4565b610226565b600154600160a01b90046001600160601b031634146101a057604051632409aec760e01b815260040160405180910390fd5b600080546001600160a01b031681526002602052604090205442116101d857604051635da35c1560e11b815260040160405180910390fd5b6101e54262278d00610403565b600080546001600160a01b039081168252600260208190526040808420949094558254909116825291812090910180549161021f8361041c565b9190505550565b6000546001600160a01b031633146102745760405162461bcd60e51b815260206004820152600d60248201526c139bdd0814195c9b5a5d1d1959609a1b604482015260640160405180910390fd5b33600090815260026020819052604090912081015410156102a85760405163624dd24760e01b815260040160405180910390fd5b6102b54262eff100610403565b33600090815260026020526040902060010154106102e6576040516328f164d160e11b815260040160405180910390fd5b600080546001600160a01b0316815260026020819052604082200180549161030d8361041c565b9190505550806001600160601b031647101561033c57604051631ea447d760e31b815260040160405180910390fd5b600080546001600160a01b031681526002602052604080822042600191909101555133916001600160601b03841680156108fc02929091818181858888f19350505050158015610390573d6000803e3d6000fd5b5050565b6000602082840312156103a657600080fd5b81356001600160a01b03811681146103bd57600080fd5b9392505050565b6000602082840312156103d657600080fd5b81356001600160601b03811681146103bd57600080fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610416576104166103ed565b92915050565b60006001820161042e5761042e6103ed565b506001019056fea2646970667358221220762676e5f5308501e36feb39a31a2f332ee53a346593cee79509ef35907455e664736f6c63430008140033608060405234801561001057600080fd5b5060405161077538038061077583398101604081905261002f916100a9565b600180546001600160a01b03199081166001600160a01b039687161790915560039690965560049490945560008054861692841692909217909155600280549094169116179091556007805460ff1916911515919091179055610118565b80516001600160a01b03811681146100a457600080fd5b919050565b60008060008060008060c087890312156100c257600080fd5b86519550602087015194506100d96040880161008d565b93506100e76060880161008d565b92506100f56080880161008d565b915060a0870151801515811461010a57600080fd5b809150509295509295509295565b61064e806101276000396000f3fe6080604052600436106100595760003560e01c8063827d95341461006557806392d09ceb1461009a578063977dec1a146100be5780639d585f7f146100d4578063ab7b1c89146100ea578063dbc837c51461010c57600080fd5b3661006057005b600080fd5b34801561007157600080fd5b5061008561008036600461055b565b610144565b60405190151581526020015b60405180910390f35b3480156100a657600080fd5b506100b060035481565b604051908152602001610091565b3480156100ca57600080fd5b506100b060065481565b3480156100e057600080fd5b506100b060045481565b3480156100f657600080fd5b5061010a61010536600461055b565b6101f8565b005b34801561011857600080fd5b5060015461012c906001600160a01b031681565b6040516001600160a01b039091168152602001610091565b600061015362278d004261058a565b6006541061019e5760405162461bcd60e51b815260206004820152601460248201527313db9b1e481b5bdb9d1a1b1e4818da1958dad95960621b604482015260640160405180910390fd5b6000683635c9adc5dea000006107086004546101ba91906105a3565b6101c491906105ba565b90506000816101d3858261058a565b6101de9060646105a3565b6101e891906105ba565b42600655600a1115949350505050565b806004541080610209575080600454115b1561022757604051630636b6d560e11b815260040160405180910390fd5b60055460ff16151560010361024f5760405163941a0dc960e01b815260040160405180910390fd5b60075460ff1615156001036103d657610269610708610144565b15610371578060046000828254610280919061058a565b90915550506005805460ff191660011790556002546000546001600160a01b03918216916323b872dd913391166102b56104f4565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064015b6020604051808303816000875af115801561030a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032e91906105dc565b506001546003546040516001600160a01b039092169181156108fc0291906000818181858888f1935050505015801561036b573d6000803e3d6000fd5b506104b8565b8060046000828254610383919061058a565b90915550506005805460ff191660011790556002546000546040516323b872dd60e01b81523360048201526001600160a01b039182166024820152604481018490529116906323b872dd906064016102eb565b80600460008282546103e8919061058a565b90915550506005805460ff191660011790556002546000546040516323b872dd60e01b81523360048201526001600160a01b039182166024820152604481018490529116906323b872dd906064016020604051808303816000875af1158015610455573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047991906105dc565b506001546003546040516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156104b6573d6000803e3d6000fd5b505b60408051338152602081018390527f2348ce456766a06226fbe75c6f2c74d3165139a5644dd3390817b55600f3eb92910160405180910390a150565b60075460009060ff161515600114801561051d57506006546105199062278d00610605565b4210155b15610542576064600454600a61053391906105a3565b61053d91906105ba565b905090565b6040516339218f3b60e01b815260040160405180910390fd5b60006020828403121561056d57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561059d5761059d610574565b92915050565b808202811582820484141761059d5761059d610574565b6000826105d757634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156105ee57600080fd5b815180151581146105fe57600080fd5b9392505050565b8082018082111561059d5761059d61057456fea26469706673582212207ec87b7cb13849da1c2e36bf07ffad7e7939e2aee7a6c1bd45d75341f777969264736f6c63430008140033a26469706673582212200fbdbdb3d99af0f6cd3a754198ff170d017d48a519fec78f7053d300e8aeeff064736f6c63430008140033a2646970667358221220d8e8783219272fb27eeb32f4100d875b6a8b94bf9cb8cd95030b7690c6807ff064736f6c63430008140033",
    "sourceMap": "344:1410:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;563:208;;;:::i;:::-;;2452:134:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3360:151;;;:::i;:::-;;;;;;;:::i;3221:133::-;;;:::i;2922:141::-;;;:::i;2738:178::-;;;:::i;:::-;;;;;;;:::i;777:527:28:-;;;:::i;421:17::-;;;;;-1:-1:-1;;;;;421:17:28;;;;;;-1:-1:-1;;;;;4586:32:29;;;4568:51;;4556:2;4541:18;421:17:28;4408:217:29;2592:140:6;;;:::i;:::-;;;;;;;:::i;3069:146::-;;;:::i;1310:442:28:-;;;:::i;2157:141:6:-;;;:::i;1819:584:0:-;;;:::i;:::-;;;5814:14:29;;5807:22;5789:41;;5777:2;5762:18;1819:584:0;5649:187:29;379:36:28;;;;;-1:-1:-1;;;;;379:36:28;;;2304:142:6;;;:::i;1572:26:0:-;;;;;;;;;563:208:28;605:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;597:5:28;:18;;-1:-1:-1;;;;;;597:18:28;-1:-1:-1;;;;;597:18:28;;;;;;;;;642:34;;;;;:::i;:::-;-1:-1:-1;;;;;4586:32:29;;;4568:51;;4556:2;4541:18;642:34:28;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;625:14:28;:51;;-1:-1:-1;;;;;;625:51:28;-1:-1:-1;;;;;625:51:28;;;;;;686:5;;697:8;;686:45;;-1:-1:-1;;;686:45:28;;697:8;;;686:45;;;6485:51:29;707:23:28;6552:18:29;;;6545:34;686:5:28;;;:10;;6458:18:29;;686:45:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;563:208::o;2452:134:6:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:6;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;3360:151::-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;3221:133::-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:6;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:6;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;2738:178::-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:527:28;878:8;;870:26;;-1:-1:-1;;;870:26:28;;-1:-1:-1;;;;;878:8:28;;;870:26;;;6485:51:29;888:7:28;6552:18:29;;;6545:34;851:9:28;;870:7;;;;6458:18:29;;870:26:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;920:8:28;;906:23;;-1:-1:-1;;;906:23:28;;-1:-1:-1;;;;;920:8:28;;;906:23;;;4568:51:29;906:13:28;;-1:-1:-1;906:13:28;;-1:-1:-1;4541:18:29;;906:23:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;956:14:28;;:54;;-1:-1:-1;;;956:54:28;;7454:26:29;7442:39;;956:54:28;;;7424:58:29;-1:-1:-1;;;;;956:14:28;;;;-1:-1:-1;956:34:28;;-1:-1:-1;7397:18:29;;956:54:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;939:14;:71;;-1:-1:-1;;;;;;939:71:28;-1:-1:-1;;;;;939:71:28;;;;;;;;;1020:48;;;-1:-1:-1;;;1020:48:28;;;;:28;;1056:9;;1020:48;;;;;-1:-1:-1;;1020:48:28;;;;;;;1056:9;939:71;1020:48;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1078:16:28;;-1:-1:-1;;;1078:16:28;;1086:7;1078:16;;;8104:25:29;1078:7:28;;-1:-1:-1;1078:7:28;;-1:-1:-1;8077:18:29;;;-1:-1:-1;1078:16:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1104:14;;;;;;;;;-1:-1:-1;;;;;1104:14:28;-1:-1:-1;;;;;1104:28:28;;1140:9;1104:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1179:14:28;;1162:52;;-1:-1:-1;;;;;;1179:14:28;1171:31;;-1:-1:-1;1204:9:28;;-1:-1:-1;1162:8:28;:52::i;:::-;1224:14;;:49;;-1:-1:-1;;;1224:49:28;;1263:9;1224:49;;;7424:58:29;-1:-1:-1;;;;;1224:14:28;;;;:38;;7397:18:29;;1224:49:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;317:28:1;309:37;;-1:-1:-1;;;;;1283:12:28;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;813:491;777:527::o;2592:140:6:-;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3069:146;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1310:442:28;1369:8;;1361:26;;-1:-1:-1;;;1361:26:28;;-1:-1:-1;;;;;1369:8:28;;;1361:26;;;6485:51:29;1379:7:28;6552:18:29;;;6545:34;1361:7:28;;;;6458:18:29;;1361:26:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1397:5:28;;1416:14;;1397:60;;-1:-1:-1;;;1397:60:28;;-1:-1:-1;;;;;1416:14:28;;;1397:60;;;6485:51:29;1433:23:28;6552:18:29;;;6545:34;1397:5:28;;;-1:-1:-1;1397:10:28;;-1:-1:-1;6458:18:29;;1397:60:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1481:8:28;;1467:23;;-1:-1:-1;;;1467:23:28;;-1:-1:-1;;;;;1481:8:28;;;1467:23;;;4568:51:29;1467:13:28;;-1:-1:-1;1467:13:28;;-1:-1:-1;4541:18:29;;1467:23:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1521:14:28;;:85;;-1:-1:-1;;;1521:85:28;;:14;:85;;;5789:41:29;-1:-1:-1;;;;;1521:14:28;;;;-1:-1:-1;1521:38:28;;-1:-1:-1;1580:9:28;;5762:18:29;;1521:85:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:18;:106;;-1:-1:-1;;;;;;1500:106:28;-1:-1:-1;;;;;1500:106:28;;;;;;;;;1617:5;;:67;;-1:-1:-1;;;1617:67:28;;;;;6485:51:29;;;;1660:23:28;6552:18:29;;;6545:34;1617:5:28;;;;:13;;6458:18:29;;1617:67:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1694:18:28;;:51;;-1:-1:-1;;;1694:51:28;;1723:21;1694:51;;;8104:25:29;-1:-1:-1;;;;;1694:18:28;;;;:28;;8077:18:29;;1694:51:28;7944:191:29;2157:141:6;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;6485:51:29;;;-1:-1:-1;;;6552:18:29;;;6545:34;2196:43:0;;;;;;;;;6458:18:29;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;2304:142:6:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:6;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;5209:262:0:-;5271:1;5266;:6;5262:203;;5293:41;;;;;10333:2:29;10315:21;;;10372:2;10352:18;;;10345:30;10411:34;10406:2;10391:18;;10384:62;-1:-1:-1;;;10477:2:29;10462:18;;10455:32;10519:3;10504:19;;10131:398;5293:41:0;;;;;;;;5353:31;;;10746:21:29;;;10803:2;10783:18;;;10776:30;-1:-1:-1;;;10837:2:29;10822:18;;10815:40;10922:4;10907:20;;10900:36;;;5353:31:0;;;;;;;10887:3:29;5353:31:0;;;5403;;;11159:21:29;;;11216:2;11196:18;;;11189:30;-1:-1:-1;;;11250:2:29;11235:18;;11228:40;11335:4;11320:20;;11313:36;;;5403:31:0;;;;;;;11300:3:29;5403:31:0;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;2409:432::-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;11562:51:29;;;-1:-1:-1;;;11629:18:29;;;11622:34;;;;2712:4:0;11672:18:29;;;11665:34;2489:11:0;;1671:64;2586:43;;11535:18:29;;2652:67:0;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:658:29:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:29;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:29;;14:658;-1:-1:-1;;;;;;14:658:29:o;677:250::-;762:1;772:113;786:6;783:1;780:13;772:113;;;862:11;;;856:18;843:11;;;836:39;808:2;801:10;772:113;;;-1:-1:-1;;919:1:29;901:16;;894:27;677:250::o;932:1899::-;1136:4;1165:2;1205;1194:9;1190:18;1235:2;1224:9;1217:21;1258:6;1293;1287:13;1324:6;1316;1309:22;1362:2;1351:9;1347:18;1340:25;;1424:2;1414:6;1411:1;1407:14;1396:9;1392:30;1388:39;1374:53;;1462:2;1454:6;1450:15;1483:1;1493:1309;1507:6;1504:1;1501:13;1493:1309;;;-1:-1:-1;;1572:22:29;;;1568:36;1556:49;;1628:13;;1715:9;;-1:-1:-1;;;;;1711:35:29;1696:51;;1786:11;;1780:18;1680:2;1818:15;;;1811:27;;;1899:19;;1668:15;;;1931:24;;;2111:21;;;;1978:2;2064:1;2060:16;;;2048:29;;2044:38;;;2002:15;;;;2156:1;2170:523;2186:8;2181:3;2178:17;2170:523;;;2267:19;;;-1:-1:-1;;2263:33:29;2249:48;;2324:15;;2372:9;;2398:24;;;2439:74;2372:9;2487:15;;;2474:11;;;2439:74;:::i;:::-;2622:17;;;;2583:2;2560:17;-1:-1:-1;;2556:31:29;2544:44;;;;2540:53;;;-1:-1:-1;2665:14:29;;;;2214:1;2205:11;2170:523;;;-1:-1:-1;2716:6:29;;-1:-1:-1;;;2780:12:29;;;;-1:-1:-1;2745:15:29;;;;1529:1;1522:9;1493:1309;;;-1:-1:-1;2819:6:29;;932:1899;-1:-1:-1;;;;;;;932:1899:29:o;2836:1567::-;3038:4;3067:2;3107;3096:9;3092:18;3137:2;3126:9;3119:21;3160:6;3195;3189:13;3226:6;3218;3211:22;3252:2;3242:12;;3285:2;3274:9;3270:18;3263:25;;3347:2;3337:6;3334:1;3330:14;3319:9;3315:30;3311:39;3385:2;3377:6;3373:15;3406:1;3427;3437:937;3453:6;3448:3;3445:15;3437:937;;;3522:22;;;-1:-1:-1;;3518:36:29;3506:49;;3578:13;;3665:9;;-1:-1:-1;;;;;3661:35:29;3646:51;;3736:11;;3730:18;3768:15;;;3761:27;;;3849:19;;3618:15;;;3881:24;;;3971:21;;;;4016:1;;3939:2;3927:15;;;4030:236;4046:8;4041:3;4038:17;4030:236;;;4127:15;;-1:-1:-1;;;;;;4123:42:29;4109:57;;4235:17;;;;4074:1;4065:11;;;;;4192:14;;;;4030:236;;;-1:-1:-1;4352:12:29;;;;4289:5;-1:-1:-1;;;4317:15:29;;;;3479:1;3470:11;3437:937;;;-1:-1:-1;4391:6:29;;2836:1567;-1:-1:-1;;;;;;;;;2836:1567:29:o;4630:1014::-;4792:4;4821:2;4861;4850:9;4846:18;4891:2;4880:9;4873:21;4914:6;4949;4943:13;4980:6;4972;4965:22;5018:2;5007:9;5003:18;4996:25;;5080:2;5070:6;5067:1;5063:14;5052:9;5048:30;5044:39;5030:53;;5118:2;5110:6;5106:15;5139:1;5149:466;5163:6;5160:1;5157:13;5149:466;;;5228:22;;;-1:-1:-1;;5224:36:29;5212:49;;5284:13;;5326:9;;5348:24;;;5385:74;5326:9;5433:15;;;5420:11;;;5385:74;:::i;:::-;5525:2;5502:17;-1:-1:-1;;5498:31:29;5486:44;;;;5482:53;;;-1:-1:-1;5593:12:29;;;;5558:15;;;;5185:1;5178:9;5149:466;;6590:380;6669:1;6665:12;;;;6712;;;6733:61;;6787:4;6779:6;6775:17;6765:27;;6733:61;6840:2;6832:6;6829:14;6809:18;6806:38;6803:161;;6886:10;6881:3;6877:20;6874:1;6867:31;6921:4;6918:1;6911:15;6949:4;6946:1;6939:15;6803:161;;6590:380;;;:::o;7493:148::-;-1:-1:-1;;;;;7585:31:29;;7575:42;;7565:70;;7631:1;7628;7621:12;7565:70;7493:148;:::o;7646:293::-;7741:6;7794:2;7782:9;7773:7;7769:23;7765:32;7762:52;;;7810:1;7807;7800:12;7762:52;7842:9;7836:16;7861:48;7903:5;7861:48;:::i;:::-;7928:5;7646:293;-1:-1:-1;;;7646:293:29:o;8679:277::-;8746:6;8799:2;8787:9;8778:7;8774:23;8770:32;8767:52;;;8815:1;8812;8805:12;8767:52;8847:9;8841:16;8900:5;8893:13;8886:21;8879:5;8876:32;8866:60;;8922:1;8919;8912:12;9450:384;-1:-1:-1;;;;;;9635:33:29;;9623:46;;9692:13;;9605:3;;9714:74;9692:13;9777:1;9768:11;;9761:4;9749:17;;9714:74;:::i;:::-;9808:16;;;;9826:1;9804:24;;9450:384;-1:-1:-1;;;9450:384:29:o;9839:287::-;9968:3;10006:6;10000:13;10022:66;10081:6;10076:3;10069:4;10061:6;10057:17;10022:66;:::i;:::-;10104:16;;;;;9839:287;-1:-1:-1;;9839:287:29:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "_usdc()": "791966ec",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "insuredFactory()": "dca270f1",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_InsuredCollateral()": "956e8db8",
    "test_InsuredCryto()": "6eaf45f3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_usdc\",\"outputs\":[{\"internalType\":\"contract USDC\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"insuredFactory\",\"outputs\":[{\"internalType\":\"contract InsuredFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_InsuredCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_InsuredCryto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/InsuredFactory.t.sol\":\"CounterTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1\",\"dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e\",\"dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155\",\"dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"src/IERC20.sol\":{\"keccak256\":\"0x791280a8da2029284076e93963438088b3d4ae654114f1a6bfdb6ee19ee38da7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://904ca14f85a6d6b09bf0ba517922b7b0ab81827270f06e8848b1dd9eb01cd2d8\",\"dweb:/ipfs/QmbF3VGqF1KPbiNrDFnzW4BduRrdNxV4Pc7biPi6Gb2eZ8\"]},\"src/InsuredCollateral.sol\":{\"keccak256\":\"0xedd63a2622e3f06376367d7960a5df801cf1a4c576b2b064c439bb0a5c05182d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ce91faf6ad75b4b747cb9f4fb3bc5ccbeaa3aa2f92e239946cad74d960ee162\",\"dweb:/ipfs/QmWqJZqUdRCPRemPX4d5kzrTjDKxthvfR87XxMazNgyLub\"]},\"src/InsuredCrypto.sol\":{\"keccak256\":\"0xb10348e6a6347edd0adf6f9032ef0907bb1cfa286c57ef30672ae98b4fe18926\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://655bb0bcde622bf6a79327cb3c27b11967b47512725e5d55d25c5dbdae53a0dd\",\"dweb:/ipfs/QmbM2whP26mVVyaGRpBBmGvCvcxzEENPv3WJdevEbK1u6f\"]},\"src/InsuredFactory.sol\":{\"keccak256\":\"0x0ef685c63370be8299890f7fe10e6dd72001b39819312c69cd957d5bd08e3024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5865f8e0fb4936f174a9dc3c174ba545afa2355d61e59a677d78a631e40c6cf\",\"dweb:/ipfs/QmY2GVoqXWCViG1NcdDJNWWTwui7LeiYormgenxSnEmPzc\"]},\"src/USDC.sol\":{\"keccak256\":\"0x8ec08538ae900ff6a8ae4da0c2029b4644c564cc9114482439cd59250b1a8445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd557f00503cc9ed7ad1f82a6fee91c88b821523e9767cd32a8d0818462d1512\",\"dweb:/ipfs/Qma2mutVBFh9RJZX4X37NuwuixDcNTZVWkdpJco2t3GyMU\"]},\"test/InsuredFactory.t.sol\":{\"keccak256\":\"0x5536cd0068851eec505422fd90bdf7d13b65506ce7948a64576fa53c605f17bd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8a47be7c49aa0283a61d68bdc16532a053e027e8c535ea74ae9f10e4fab96114\",\"dweb:/ipfs/QmWomwuNgSsjASKg8QenLaD1Zu7EWpWadwKSQ39d4YUaDb\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_usdc",
          "outputs": [
            {
              "internalType": "contract USDC",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "insuredFactory",
          "outputs": [
            {
              "internalType": "contract InsuredFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_InsuredCollateral"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_InsuredCryto"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/InsuredFactory.t.sol": "CounterTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8",
        "urls": [
          "bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1",
          "dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d",
        "urls": [
          "bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e",
          "dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68",
        "urls": [
          "bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155",
          "dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "src/IERC20.sol": {
        "keccak256": "0x791280a8da2029284076e93963438088b3d4ae654114f1a6bfdb6ee19ee38da7",
        "urls": [
          "bzz-raw://904ca14f85a6d6b09bf0ba517922b7b0ab81827270f06e8848b1dd9eb01cd2d8",
          "dweb:/ipfs/QmbF3VGqF1KPbiNrDFnzW4BduRrdNxV4Pc7biPi6Gb2eZ8"
        ],
        "license": "MIT"
      },
      "src/InsuredCollateral.sol": {
        "keccak256": "0xedd63a2622e3f06376367d7960a5df801cf1a4c576b2b064c439bb0a5c05182d",
        "urls": [
          "bzz-raw://1ce91faf6ad75b4b747cb9f4fb3bc5ccbeaa3aa2f92e239946cad74d960ee162",
          "dweb:/ipfs/QmWqJZqUdRCPRemPX4d5kzrTjDKxthvfR87XxMazNgyLub"
        ],
        "license": "MIT"
      },
      "src/InsuredCrypto.sol": {
        "keccak256": "0xb10348e6a6347edd0adf6f9032ef0907bb1cfa286c57ef30672ae98b4fe18926",
        "urls": [
          "bzz-raw://655bb0bcde622bf6a79327cb3c27b11967b47512725e5d55d25c5dbdae53a0dd",
          "dweb:/ipfs/QmbM2whP26mVVyaGRpBBmGvCvcxzEENPv3WJdevEbK1u6f"
        ],
        "license": "UNLICENSED"
      },
      "src/InsuredFactory.sol": {
        "keccak256": "0x0ef685c63370be8299890f7fe10e6dd72001b39819312c69cd957d5bd08e3024",
        "urls": [
          "bzz-raw://e5865f8e0fb4936f174a9dc3c174ba545afa2355d61e59a677d78a631e40c6cf",
          "dweb:/ipfs/QmY2GVoqXWCViG1NcdDJNWWTwui7LeiYormgenxSnEmPzc"
        ],
        "license": "MIT"
      },
      "src/USDC.sol": {
        "keccak256": "0x8ec08538ae900ff6a8ae4da0c2029b4644c564cc9114482439cd59250b1a8445",
        "urls": [
          "bzz-raw://fd557f00503cc9ed7ad1f82a6fee91c88b821523e9767cd32a8d0818462d1512",
          "dweb:/ipfs/Qma2mutVBFh9RJZX4X37NuwuixDcNTZVWkdpJco2t3GyMU"
        ],
        "license": "MIT"
      },
      "test/InsuredFactory.t.sol": {
        "keccak256": "0x5536cd0068851eec505422fd90bdf7d13b65506ce7948a64576fa53c605f17bd",
        "urls": [
          "bzz-raw://8a47be7c49aa0283a61d68bdc16532a053e027e8c535ea74ae9f10e4fab96114",
          "dweb:/ipfs/QmWomwuNgSsjASKg8QenLaD1Zu7EWpWadwKSQ39d4YUaDb"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/InsuredFactory.t.sol",
    "id": 45171,
    "exportedSymbols": {
      "CounterTest": [
        45170
      ],
      "InsuranceCrypto": [
        44725
      ],
      "InsuredCollateral": [
        44498
      ],
      "InsuredFactory": [
        44958
      ],
      "Test": [
        12215
      ],
      "USDC": [
        44986
      ],
      "console2": [
        30110
      ],
      "stdError": [
        7441
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1716:28",
    "nodes": [
      {
        "id": 44988,
        "nodeType": "PragmaDirective",
        "src": "39:23:28",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 44992,
        "nodeType": "ImportDirective",
        "src": "64:60:28",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45171,
        "sourceUnit": 12216,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44989,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12215,
              "src": "72:4:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44990,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30110,
              "src": "78:8:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44991,
              "name": "stdError",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7441,
              "src": "88:8:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44994,
        "nodeType": "ImportDirective",
        "src": "125:57:28",
        "nodes": [],
        "absolutePath": "src/InsuredFactory.sol",
        "file": "../src/InsuredFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45171,
        "sourceUnit": 44959,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44993,
              "name": "InsuredFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44958,
              "src": "133:14:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44996,
        "nodeType": "ImportDirective",
        "src": "183:57:28",
        "nodes": [],
        "absolutePath": "src/InsuredCrypto.sol",
        "file": "../src/InsuredCrypto.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45171,
        "sourceUnit": 44726,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44995,
              "name": "InsuranceCrypto",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44725,
              "src": "191:15:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44998,
        "nodeType": "ImportDirective",
        "src": "241:63:28",
        "nodes": [],
        "absolutePath": "src/InsuredCollateral.sol",
        "file": "../src/InsuredCollateral.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45171,
        "sourceUnit": 44499,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44997,
              "name": "InsuredCollateral",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44498,
              "src": "249:17:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45000,
        "nodeType": "ImportDirective",
        "src": "305:37:28",
        "nodes": [],
        "absolutePath": "src/USDC.sol",
        "file": "../src/USDC.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45171,
        "sourceUnit": 44987,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44999,
              "name": "USDC",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44986,
              "src": "313:4:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45170,
        "nodeType": "ContractDefinition",
        "src": "344:1410:28",
        "nodes": [
          {
            "id": 45005,
            "nodeType": "VariableDeclaration",
            "src": "379:36:28",
            "nodes": [],
            "constant": false,
            "functionSelector": "dca270f1",
            "mutability": "mutable",
            "name": "insuredFactory",
            "nameLocation": "401:14:28",
            "scope": 45170,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_InsuredFactory_$44958",
              "typeString": "contract InsuredFactory"
            },
            "typeName": {
              "id": 45004,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45003,
                "name": "InsuredFactory",
                "nameLocations": [
                  "379:14:28"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44958,
                "src": "379:14:28"
              },
              "referencedDeclaration": 44958,
              "src": "379:14:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InsuredFactory_$44958",
                "typeString": "contract InsuredFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45008,
            "nodeType": "VariableDeclaration",
            "src": "421:17:28",
            "nodes": [],
            "constant": false,
            "functionSelector": "791966ec",
            "mutability": "mutable",
            "name": "_usdc",
            "nameLocation": "433:5:28",
            "scope": 45170,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_USDC_$44986",
              "typeString": "contract USDC"
            },
            "typeName": {
              "id": 45007,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45006,
                "name": "USDC",
                "nameLocations": [
                  "421:4:28"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44986,
                "src": "421:4:28"
              },
              "referencedDeclaration": 44986,
              "src": "421:4:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_USDC_$44986",
                "typeString": "contract USDC"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45011,
            "nodeType": "VariableDeclaration",
            "src": "445:30:28",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_insuredCrypto",
            "nameLocation": "461:14:28",
            "scope": 45170,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_InsuranceCrypto_$44725",
              "typeString": "contract InsuranceCrypto"
            },
            "typeName": {
              "id": 45010,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45009,
                "name": "InsuranceCrypto",
                "nameLocations": [
                  "445:15:28"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44725,
                "src": "445:15:28"
              },
              "referencedDeclaration": 44725,
              "src": "445:15:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InsuranceCrypto_$44725",
                "typeString": "contract InsuranceCrypto"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 45014,
            "nodeType": "VariableDeclaration",
            "src": "481:36:28",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_insuredCollateral",
            "nameLocation": "499:18:28",
            "scope": 45170,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_InsuredCollateral_$44498",
              "typeString": "contract InsuredCollateral"
            },
            "typeName": {
              "id": 45013,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45012,
                "name": "InsuredCollateral",
                "nameLocations": [
                  "481:17:28"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44498,
                "src": "481:17:28"
              },
              "referencedDeclaration": 44498,
              "src": "481:17:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InsuredCollateral_$44498",
                "typeString": "contract InsuredCollateral"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 45020,
            "nodeType": "VariableDeclaration",
            "src": "524:32:28",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_insurer",
            "nameLocation": "532:8:28",
            "scope": 45170,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45015,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "524:7:28",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "30783131",
                  "id": 45018,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "551:4:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_17_by_1",
                    "typeString": "int_const 17"
                  },
                  "value": "0x11"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_17_by_1",
                    "typeString": "int_const 17"
                  }
                ],
                "id": 45017,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "543:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 45016,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "543:7:28",
                  "typeDescriptions": {}
                }
              },
              "id": 45019,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "543:13:28",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 45049,
            "nodeType": "FunctionDefinition",
            "src": "563:208:28",
            "nodes": [],
            "body": {
              "id": 45048,
              "nodeType": "Block",
              "src": "587:184:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45023,
                      "name": "_usdc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45008,
                      "src": "597:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_USDC_$44986",
                        "typeString": "contract USDC"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 45026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "605:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_USDC_$44986_$",
                          "typeString": "function () returns (contract USDC)"
                        },
                        "typeName": {
                          "id": 45025,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45024,
                            "name": "USDC",
                            "nameLocations": [
                              "609:4:28"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44986,
                            "src": "609:4:28"
                          },
                          "referencedDeclaration": 44986,
                          "src": "609:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_USDC_$44986",
                            "typeString": "contract USDC"
                          }
                        }
                      },
                      "id": 45027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "605:10:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_USDC_$44986",
                        "typeString": "contract USDC"
                      }
                    },
                    "src": "597:18:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_USDC_$44986",
                      "typeString": "contract USDC"
                    }
                  },
                  "id": 45029,
                  "nodeType": "ExpressionStatement",
                  "src": "597:18:28"
                },
                {
                  "expression": {
                    "id": 45039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45030,
                      "name": "insuredFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45005,
                      "src": "625:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InsuredFactory_$44958",
                        "typeString": "contract InsuredFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 45036,
                              "name": "_usdc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45008,
                              "src": "669:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_USDC_$44986",
                                "typeString": "contract USDC"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_USDC_$44986",
                                "typeString": "contract USDC"
                              }
                            ],
                            "id": 45035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "661:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45034,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "661:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "661:14:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 45033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "642:18:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_InsuredFactory_$44958_$",
                          "typeString": "function (address) returns (contract InsuredFactory)"
                        },
                        "typeName": {
                          "id": 45032,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45031,
                            "name": "InsuredFactory",
                            "nameLocations": [
                              "646:14:28"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44958,
                            "src": "646:14:28"
                          },
                          "referencedDeclaration": 44958,
                          "src": "646:14:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_InsuredFactory_$44958",
                            "typeString": "contract InsuredFactory"
                          }
                        }
                      },
                      "id": 45038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "642:34:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InsuredFactory_$44958",
                        "typeString": "contract InsuredFactory"
                      }
                    },
                    "src": "625:51:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InsuredFactory_$44958",
                      "typeString": "contract InsuredFactory"
                    }
                  },
                  "id": 45040,
                  "nodeType": "ExpressionStatement",
                  "src": "625:51:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45044,
                        "name": "_insurer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45020,
                        "src": "697:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130303030303030303030303030303030303030303030",
                        "id": 45045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "707:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        },
                        "value": "10000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45041,
                        "name": "_usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45008,
                        "src": "686:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_USDC_$44986",
                          "typeString": "contract USDC"
                        }
                      },
                      "id": 45043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "692:4:28",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44985,
                      "src": "686:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "686:45:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45047,
                  "nodeType": "ExpressionStatement",
                  "src": "686:45:28"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "572:5:28",
            "parameters": {
              "id": 45021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "577:2:28"
            },
            "returnParameters": {
              "id": 45022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "587:0:28"
            },
            "scope": 45170,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45117,
            "nodeType": "FunctionDefinition",
            "src": "777:527:28",
            "nodes": [],
            "body": {
              "id": 45116,
              "nodeType": "Block",
              "src": "813:491:28",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    45053
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45053,
                      "mutability": "mutable",
                      "name": "protocolInsuredFee",
                      "nameLocation": "830:18:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 45116,
                      "src": "823:25:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 45052,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "823:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45055,
                  "initialValue": {
                    "hexValue": "302e31",
                    "id": 45054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "851:9:28",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000000000000_by_1",
                      "typeString": "int_const 100000000000000000"
                    },
                    "value": "0.1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "823:37:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45059,
                        "name": "_insurer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45020,
                        "src": "878:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 45060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "888:7:28",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45056,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "870:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13921",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "873:4:28",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13499,
                      "src": "870:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "870:26:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45062,
                  "nodeType": "ExpressionStatement",
                  "src": "870:26:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45066,
                        "name": "_insurer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45020,
                        "src": "920:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45063,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "906:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13921",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "909:10:28",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13587,
                      "src": "906:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:23:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45068,
                  "nodeType": "ExpressionStatement",
                  "src": "906:23:28"
                },
                {
                  "expression": {
                    "id": 45074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45069,
                      "name": "_insuredCrypto",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45011,
                      "src": "939:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InsuranceCrypto_$44725",
                        "typeString": "contract InsuranceCrypto"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 45072,
                          "name": "protocolInsuredFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45053,
                          "src": "991:18:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        ],
                        "expression": {
                          "id": 45070,
                          "name": "insuredFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45005,
                          "src": "956:14:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_InsuredFactory_$44958",
                            "typeString": "contract InsuredFactory"
                          }
                        },
                        "id": 45071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "971:19:28",
                        "memberName": "createInsuredCrypto",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44829,
                        "src": "956:34:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint96_$returns$_t_contract$_InsuranceCrypto_$44725_$",
                          "typeString": "function (uint96) external returns (contract InsuranceCrypto)"
                        }
                      },
                      "id": 45073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "956:54:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InsuranceCrypto_$44725",
                        "typeString": "contract InsuranceCrypto"
                      }
                    },
                    "src": "939:71:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InsuranceCrypto_$44725",
                      "typeString": "contract InsuranceCrypto"
                    }
                  },
                  "id": 45075,
                  "nodeType": "ExpressionStatement",
                  "src": "939:71:28"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 45076,
                          "name": "_insuredCrypto",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45011,
                          "src": "1020:14:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_InsuranceCrypto_$44725",
                            "typeString": "contract InsuranceCrypto"
                          }
                        },
                        "id": 45078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1035:13:28",
                        "memberName": "insureMonthly",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44609,
                        "src": "1020:28:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 45080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 45079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1056:9:28",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "1020:46:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 45081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1020:48:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45082,
                  "nodeType": "ExpressionStatement",
                  "src": "1020:48:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3332",
                        "id": 45086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1086:7:28",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2764800_by_1",
                          "typeString": "int_const 2764800"
                        },
                        "value": "32"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2764800_by_1",
                          "typeString": "int_const 2764800"
                        }
                      ],
                      "expression": {
                        "id": 45083,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1078:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13921",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1081:4:28",
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13492,
                      "src": "1078:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 45087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1078:16:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45088,
                  "nodeType": "ExpressionStatement",
                  "src": "1078:16:28"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 45089,
                          "name": "_insuredCrypto",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45011,
                          "src": "1104:14:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_InsuranceCrypto_$44725",
                            "typeString": "contract InsuranceCrypto"
                          }
                        },
                        "id": 45091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1119:13:28",
                        "memberName": "insureMonthly",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44609,
                        "src": "1104:28:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 45093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 45092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1140:9:28",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "1104:46:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 45094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1104:48:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45095,
                  "nodeType": "ExpressionStatement",
                  "src": "1104:48:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45099,
                              "name": "_insuredCrypto",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45011,
                              "src": "1179:14:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_InsuranceCrypto_$44725",
                                "typeString": "contract InsuranceCrypto"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_InsuranceCrypto_$44725",
                                "typeString": "contract InsuranceCrypto"
                              }
                            ],
                            "id": 45098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1171:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45097,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1171:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1171:23:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1195:7:28",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1171:31:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e32",
                        "id": 45102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1204:9:28",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        },
                        "value": "0.2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        }
                      ],
                      "id": 45096,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2485,
                        2510,
                        2523,
                        2539,
                        2581,
                        2623,
                        2665,
                        2702,
                        2739,
                        2776,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1162:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1162:52:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45104,
                  "nodeType": "ExpressionStatement",
                  "src": "1162:52:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "302e32",
                        "id": 45108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1263:9:28",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        },
                        "value": "0.2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45105,
                        "name": "_insuredCrypto",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45011,
                        "src": "1224:14:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InsuranceCrypto_$44725",
                          "typeString": "contract InsuranceCrypto"
                        }
                      },
                      "id": 45107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1239:23:28",
                      "memberName": "claimInsuranceDividends",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44679,
                      "src": "1224:38:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint96_$returns$__$",
                        "typeString": "function (uint96) external"
                      }
                    },
                    "id": 45109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1224:49:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45110,
                  "nodeType": "ExpressionStatement",
                  "src": "1224:49:28"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45111,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1283:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13921",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1286:9:28",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13604,
                      "src": "1283:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:14:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45115,
                  "nodeType": "ExpressionStatement",
                  "src": "1283:14:28"
                }
              ]
            },
            "functionSelector": "6eaf45f3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_InsuredCryto",
            "nameLocation": "786:17:28",
            "parameters": {
              "id": 45050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "803:2:28"
            },
            "returnParameters": {
              "id": 45051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "813:0:28"
            },
            "scope": 45170,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45169,
            "nodeType": "FunctionDefinition",
            "src": "1310:442:28",
            "nodes": [],
            "body": {
              "id": 45168,
              "nodeType": "Block",
              "src": "1351:401:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45123,
                        "name": "_insurer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45020,
                        "src": "1369:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 45124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1379:7:28",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45120,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1361:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13921",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1364:4:28",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13499,
                      "src": "1361:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1361:26:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45126,
                  "nodeType": "ExpressionStatement",
                  "src": "1361:26:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45132,
                            "name": "insuredFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45005,
                            "src": "1416:14:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_InsuredFactory_$44958",
                              "typeString": "contract InsuredFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_InsuredFactory_$44958",
                              "typeString": "contract InsuredFactory"
                            }
                          ],
                          "id": 45131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1408:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45130,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1408:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1408:23:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130303030303030303030303030303030303030303030",
                        "id": 45134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1433:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        },
                        "value": "10000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45127,
                        "name": "_usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45008,
                        "src": "1397:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_USDC_$44986",
                          "typeString": "contract USDC"
                        }
                      },
                      "id": 45129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1403:4:28",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44985,
                      "src": "1397:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1397:60:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45136,
                  "nodeType": "ExpressionStatement",
                  "src": "1397:60:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45140,
                        "name": "_insurer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45020,
                        "src": "1481:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45137,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "1467:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13921",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1470:10:28",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13587,
                      "src": "1467:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1467:23:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45142,
                  "nodeType": "ExpressionStatement",
                  "src": "1467:23:28"
                },
                {
                  "expression": {
                    "id": 45150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45143,
                      "name": "_insuredCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45014,
                      "src": "1500:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InsuredCollateral_$44498",
                        "typeString": "contract InsuredCollateral"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "66616c7365",
                          "id": 45148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1600:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 45144,
                            "name": "insuredFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45005,
                            "src": "1521:14:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_InsuredFactory_$44958",
                              "typeString": "contract InsuredFactory"
                            }
                          },
                          "id": 45145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1536:23:28",
                          "memberName": "createInsuredCollateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44939,
                          "src": "1521:38:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_bool_$returns$_t_contract$_InsuredCollateral_$44498_$",
                            "typeString": "function (bool) payable external returns (contract InsuredCollateral)"
                          }
                        },
                        "id": 45147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "value"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "hexValue": "302e31",
                            "id": 45146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1580:9:28",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "0.1"
                          }
                        ],
                        "src": "1521:78:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_bool_$returns$_t_contract$_InsuredCollateral_$44498_$value",
                          "typeString": "function (bool) payable external returns (contract InsuredCollateral)"
                        }
                      },
                      "id": 45149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1521:85:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InsuredCollateral_$44498",
                        "typeString": "contract InsuredCollateral"
                      }
                    },
                    "src": "1500:106:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InsuredCollateral_$44498",
                      "typeString": "contract InsuredCollateral"
                    }
                  },
                  "id": 45151,
                  "nodeType": "ExpressionStatement",
                  "src": "1500:106:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45157,
                            "name": "_insuredCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45014,
                            "src": "1639:18:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_InsuredCollateral_$44498",
                              "typeString": "contract InsuredCollateral"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_InsuredCollateral_$44498",
                              "typeString": "contract InsuredCollateral"
                            }
                          ],
                          "id": 45156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1631:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45155,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1631:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1631:27:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130303030303030303030303030303030303030303030",
                        "id": 45159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1660:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        },
                        "value": "10000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45152,
                        "name": "_usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45008,
                        "src": "1617:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_USDC_$44986",
                          "typeString": "contract USDC"
                        }
                      },
                      "id": 45154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1623:7:28",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43651,
                      "src": "1617:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 45160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1617:67:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45161,
                  "nodeType": "ExpressionStatement",
                  "src": "1617:67:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313030303030303030303030303030303030303030",
                        "id": 45165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1723:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45162,
                        "name": "_insuredCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45014,
                        "src": "1694:18:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InsuredCollateral_$44498",
                          "typeString": "contract InsuredCollateral"
                        }
                      },
                      "id": 45164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1713:9:28",
                      "memberName": "repayLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44399,
                      "src": "1694:28:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 45166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1694:51:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45167,
                  "nodeType": "ExpressionStatement",
                  "src": "1694:51:28"
                }
              ]
            },
            "functionSelector": "956e8db8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_InsuredCollateral",
            "nameLocation": "1319:22:28",
            "parameters": {
              "id": 45118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1341:2:28"
            },
            "returnParameters": {
              "id": 45119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1351:0:28"
            },
            "scope": 45170,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45001,
              "name": "Test",
              "nameLocations": [
                "368:4:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12215,
              "src": "368:4:28"
            },
            "id": 45002,
            "nodeType": "InheritanceSpecifier",
            "src": "368:4:28"
          }
        ],
        "canonicalName": "CounterTest",
        "contractDependencies": [
          44958,
          44986
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45170,
          12215,
          12164,
          7700,
          7375,
          6582,
          4522,
          3784,
          2291,
          2357,
          2354
        ],
        "name": "CounterTest",
        "nameLocation": "353:11:28",
        "scope": 45171,
        "usedErrors": [],
        "usedEvents": [
          5,
          9,
          13,
          17,
          21,
          25,
          29,
          33,
          39,
          45,
          53,
          61,
          67,
          73,
          79,
          85,
          2379,
          2384,
          2389,
          2396,
          2403,
          2410
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 28
}